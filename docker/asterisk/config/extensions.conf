[general]
static=yes
writeprotect=no
clearglobalvars=no

[default]
exten => s,1,NoOp(Default context)
 same => n,Hangup()


[from-twilio]
; Route the Twilio DID to extension 100 (Zoiper)
; Accept any E.164 +1 number and send to extension 100 for testing
exten => _+1.,1,NoOp(Inbound Twilio E.164 DID match ${EXTEN})
 same => n,Goto(internal,100,1)

; Specific test DID (kept for explicit mapping)
exten => +19863334949,1,NoOp(Inbound Twilio call for ${EXTEN})
 same => n,Goto(internal,100,1)

; Fallback: match 10-digit version of the DID
exten => 9863334949,1,NoOp(Inbound Twilio 10-digit match ${EXTEN})
 same => n,Goto(internal,100,1)

; Catch-all to avoid call loops
exten => _X.,1,NoOp(Unhandled Twilio DID ${EXTEN})
 same => n,Playback(silence/1&invalid)
 same => n,Hangup()

[from-pstn]
; Handle incoming calls from PSTN/Twilio trunk using wizard config
; Route the test DID to both extensions 100 and 101
exten => +19863334949,1,NoOp(Incoming PSTN call for ${EXTEN})
 same => n,Answer()
 same => n,Dial(PJSIP/100&PJSIP/101,30,tT)
 same => n,Hangup()

; Accept any E.164 +1 number and ring both extensions
exten => _+1.,1,NoOp(Inbound PSTN E.164 DID match ${EXTEN})
 same => n,Answer()
 same => n,Dial(PJSIP/100&PJSIP/101,30,tT)
 same => n,Hangup()

; Fallback for 10-digit numbers
exten => _NXXNXXXXXX,1,NoOp(Inbound PSTN 10-digit match ${EXTEN})
 same => n,Answer()
 same => n,Dial(PJSIP/100&PJSIP/101,30,tT)
 same => n,Hangup()

[outbound]
; Dial out via Twilio SIP trunk
; Use prefix 9 to dial external numbers: dial 9 + E.164 or national number
exten => _9+.,1,NoOp(Outbound via Twilio: ${EXTEN})
 same => n,Set(NUM=${EXTEN:1})
 same => n,Set(CALLERID(num)=${TWILIO_ORIGINATING_NUMBER})
 same => n,Set(CALLERID(name)=CallCenter)
 same => n,NoOp(Dialing E.164 number: ${NUM})
 same => n,Dial(PJSIP/twilio-na-us/sip:${NUM}@nlpbay.pstn.ashburn.twilio.com,30)
 same => n,Hangup()

exten => _9.,1,NoOp(Outbound via Twilio: ${EXTEN})
 same => n,Set(NUM=${EXTEN:1})
 same => n,Set(CALLERID(num)=${TWILIO_ORIGINATING_NUMBER})
 same => n,Set(CALLERID(name)=CallCenter)
 same => n,NoOp(Converting national number to E.164)
 same => n,GotoIf($[${LEN(${NUM})} = 10]?us_number:international)
 same => n(us_number),Set(NUM=+1${NUM})
 same => n,Goto(dial)
 same => n(international),Set(NUM=+${NUM})
 same => n(dial),NoOp(Dialing E.164 number: ${NUM})
 same => n,Dial(PJSIP/twilio-na-us/sip:${NUM}@nlpbay.pstn.ashburn.twilio.com,30)
 same => n,Hangup()

[internal]
; Internal softphone dialing
exten => 100,1,NoOp(Ringing extension 100)
 same => n,Dial(PJSIP/100,20)
 same => n,Hangup()

; Example: enable extension 101 if configured in pjsip.conf
exten => 101,1,NoOp(Ringing extension 101)
 same => n,Dial(PJSIP/101,20)
 same => n,Hangup()

; (Internal + and 00 international dialing patterns removed)

include => outbound

; Backwards-compatible context name used by realtime/template seeds
[from-internal]
; Keep it simple: include the existing internal context so endpoints
; which have context=from-internal (realtime or templates) will behave
; the same as the 'internal' context.
; Add explicit matches for international dialing using + or 00 so devices
; that are placed in 'from-internal' can dial E.164/national numbers.
exten => _+.,1,NoOp(From-internal: international E.164 dial ${EXTEN})
 same => n,Set(NUM=${EXTEN})
 same => n,NoOp(Sending E.164 number: ${NUM})
 same => n,Dial(PJSIP/twilio-na-us/sip:${NUM}@nlpbay.pstn.ashburn.twilio.com,30)
 same => n,Hangup()

exten => _00.,1,NoOp(From-internal: international 00-prefix dial ${EXTEN})
 same => n,Set(NUM=+${EXTEN:2})
 same => n,NoOp(Converting 00-prefix to E.164: ${NUM})
 same => n,Dial(PJSIP/twilio-na-us/sip:${NUM}@nlpbay.pstn.ashburn.twilio.com,30)
 same => n,Hangup()

include => internal
